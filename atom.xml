<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://horizain.github.io</id>
    <title>Horizain</title>
    <updated>2021-05-10T11:13:38.256Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://horizain.github.io"/>
    <link rel="self" href="https://horizain.github.io/atom.xml"/>
    <subtitle>Rain on the horizon</subtitle>
    <logo>https://horizain.github.io/images/avatar.png</logo>
    <icon>https://horizain.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Horizain</rights>
    <entry>
        <title type="html"><![CDATA[Python笔记本——openpyxl操作excel表格]]></title>
        <id>https://horizain.github.io/post/YOzVfWo7-/</id>
        <link href="https://horizain.github.io/post/YOzVfWo7-/">
        </link>
        <updated>2021-05-10T08:52:03.000Z</updated>
        <summary type="html"><![CDATA[<p>openpyxl是一个创建、修改excel文件的模块，保存的文件的扩展名一般为<code>.xlsx</code></p>
]]></summary>
        <content type="html"><![CDATA[<p>openpyxl是一个创建、修改excel文件的模块，保存的文件的扩展名一般为<code>.xlsx</code></p>
<!-- more -->
<h2 id="食用方法">食用方法</h2>
<h4 id="导入模块">导入模块</h4>
<pre><code class="language-python">from openpyxl import Workbook, load_workbook

# Workbook：创建新文件

# load_workbook：读取已有文件

from openpyxl.style import Alignment, Font

# Alignment：设置单元格格式

# Font：设置字体格式
</code></pre>
<h4 id="打开文件">打开文件</h4>
<pre><code class="language-python">if path.exists():
    wb = load_workbook(path)
else:
    wb = Workbook()

# 选择默认的表
# ws = wb.active

# 也可以创建删除已有的表，创建新表

</code></pre>
<h4 id="读写单元格">读写单元格</h4>
<p>写入单元格有两种方式：</p>
<pre><code class="language-python"># 第一种
# 可以构建读写用字符串，形成类似'A1'这种形式的字符
temp = '%s%s' % (column, row)
ws[temp] = text

# 第二种
ws.cell(row=1, column=1, value=text)
</code></pre>
<p>读取单元格同样有两种方法：</p>
<pre><code class="language-python"># 第一种
ws['A1'].value

# 第二种
ws.cell(row=1, column=1).value
</code></pre>
<h4 id="合并单元格并居中">合并单元格并居中</h4>
<pre><code class="language-python"># 构造例如 `A1:B2` 这种形式的字符
ws.merge_cells('%s%s:%s%s' % (start_column, start_row, end_column, end_row))

# 单元格合并后标号等于合并前左上角第一个单元格的标号
ws[&quot;%s%s&quot; % (start_column, start_row)].alignment = Alignment(vertical='center', wrapText=True)
# vertical='center'：单元格垂直居中
# wrapText=Tru：自动换行
</code></pre>
<blockquote>
<p>注：合并单元格的内容为合并前左上角单元格的内容，所以合并并写入的操作顺序为“先写入左上角，再合并”</p>
</blockquote>
<h4 id="保存文件">保存文件</h4>
<pre><code class="language-python">ws.save(abspath)
# abspath是以.xlsx扩展名结尾的绝对地址，（相对地址也可以），推荐使用pathlib构造
# 我是这样用的
docname = 'name.xlsx'
wb.save(Path.joinpath(rootPath, docname))
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python笔记本——shutil文件操作]]></title>
        <id>https://horizain.github.io/post/bbkKceax1/</id>
        <link href="https://horizain.github.io/post/bbkKceax1/">
        </link>
        <updated>2021-05-07T09:11:03.000Z</updated>
        <summary type="html"><![CDATA[<p>我主要是使用这个模块复制文件和文件夹</p>
]]></summary>
        <content type="html"><![CDATA[<p>我主要是使用这个模块复制文件和文件夹</p>
<!-- more -->
<h2 id="用法"><strong>用法</strong></h2>
<pre><code># 判断文件/文件夹并复制
for binPath in seconddir.iterdir():
    if binPath.is_file():
        srcPath = binPath.resolve()
        # 复制文件
        shutil.copy(srcPath, inputPath)
    else:
        # 复制文件夹
        shutil.copytree(binPath.resolve(), Path.joinpath(inputPath,binPath.name), dirs_exist_ok=True)

# dirs_exist_os=True：忽略已有文件夹
# Path.joinpath(inputPath,binPath.name)：合成文件夹的目的地址
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python笔记本——pathlib使用简述]]></title>
        <id>https://horizain.github.io/post/DWvXQWaZE/</id>
        <link href="https://horizain.github.io/post/DWvXQWaZE/">
        </link>
        <updated>2021-05-07T09:09:00.000Z</updated>
        <summary type="html"><![CDATA[<p>pathlib 是一个面向对象的文件系统路径模块。下面是我是用较多的函数和使用方法：</p>
]]></summary>
        <content type="html"><![CDATA[<p>pathlib 是一个面向对象的文件系统路径模块。下面是我是用较多的函数和使用方法：</p>
<!-- more -->
<h3 id="快速食用方法">快速食用方法</h3>
<p>导入模块</p>
<p><code>from pathlib import Path</code></p>
<p>新建一个Path对象</p>
<p><code>dstbinPath = Path(inputPath)</code></p>
<p>获取文件所在的<strong>相对路径</strong>的<strong>上级路径</strong></p>
<p><code>rootPath = Path.cwd().parent</code></p>
<p>parent属性可以<strong>链式调用</strong>，比如</p>
<p><code>Path.cwd().parent.parent.parent.parent</code></p>
<p>Path对象的parents属性可以拿到各级目录列表(索引值越大越接近root)</p>
<p>拼接路径</p>
<p><code>logPath = Path.joinpath(rootPath, 'errorlog')</code></p>
<p><strong>遍历</strong>文件夹文件</p>
<pre><code class="language-python">for sub in logPath.iterdir():
    if sub.is_file():
        # 获取文件的绝对路径
        srcPath = sub.resolve()
</code></pre>
<p>判断文件后缀扩展名</p>
<p><code>if logfile.suffix == '.json':</code></p>
<p>删除文件</p>
<p><code>file.unlink()</code></p>
<h2 id="对应的-os-模块的工具">对应的 <a href="https://docs.python.org/zh-cn/3/library/os.html#module-os"><code>os</code></a> 模块的工具</h2>
<table>
<thead>
<tr>
<th style="text-align:left">os 和 os.path</th>
<th style="text-align:left">pathlib</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.path.html#os.path.abspath"><code>os.path.abspath()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.resolve"><code>Path.resolve()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.html#os.chmod"><code>os.chmod()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.chmod"><code>Path.chmod()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.html#os.mkdir"><code>os.mkdir()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.mkdir"><code>Path.mkdir()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.html#os.makedirs"><code>os.makedirs()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.mkdir"><code>Path.mkdir()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.html#os.rename"><code>os.rename()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.rename"><code>Path.rename()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.html#os.replace"><code>os.replace()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.replace"><code>Path.replace()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.html#os.rmdir"><code>os.rmdir()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.rmdir"><code>Path.rmdir()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.html#os.remove"><code>os.remove()</code></a>, <a href="https://docs.python.org/zh-cn/3/library/os.html#os.unlink"><code>os.unlink()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.unlink"><code>Path.unlink()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.html#os.getcwd"><code>os.getcwd()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.cwd"><code>Path.cwd()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.path.html#os.path.exists"><code>os.path.exists()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.exists"><code>Path.exists()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.path.html#os.path.expanduser"><code>os.path.expanduser()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.expanduser"><code>Path.expanduser()</code></a> 和 <a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.home"><code>Path.home()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.html#os.listdir"><code>os.listdir()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.iterdir"><code>Path.iterdir()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.path.html#os.path.isdir"><code>os.path.isdir()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.is_dir"><code>Path.is_dir()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.path.html#os.path.isfile"><code>os.path.isfile()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.is_file"><code>Path.is_file()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.path.html#os.path.islink"><code>os.path.islink()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.is_symlink"><code>Path.is_symlink()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.html#os.link"><code>os.link()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.link_to"><code>Path.link_to()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.html#os.symlink"><code>os.symlink()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.symlink_to"><code>Path.symlink_to()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.html#os.readlink"><code>os.readlink()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.readlink"><code>Path.readlink()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.html#os.stat"><code>os.stat()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.stat"><code>Path.stat()</code></a>, <a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.owner"><code>Path.owner()</code></a>, <a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.group"><code>Path.group()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.path.html#os.path.isabs"><code>os.path.isabs()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.PurePath.is_absolute"><code>PurePath.is_absolute()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.path.html#os.path.join"><code>os.path.join()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.PurePath.joinpath"><code>PurePath.joinpath()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.path.html#os.path.basename"><code>os.path.basename()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.PurePath.name"><code>PurePath.name</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.path.html#os.path.dirname"><code>os.path.dirname()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.PurePath.parent"><code>PurePath.parent</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.path.html#os.path.samefile"><code>os.path.samefile()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.Path.samefile"><code>Path.samefile()</code></a></td>
</tr>
<tr>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/os.path.html#os.path.splitext"><code>os.path.splitext()</code></a></td>
<td style="text-align:left"><a href="https://docs.python.org/zh-cn/3/library/pathlib.html#pathlib.PurePath.suffix"><code>PurePath.suffix</code></a></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何“调教”一个好用的Chrome浏览器]]></title>
        <id>https://horizain.github.io/post/ru-he-diao-jiao-yi-ge-hao-yong-de-chrome-liu-lan-qi/</id>
        <link href="https://horizain.github.io/post/ru-he-diao-jiao-yi-ge-hao-yong-de-chrome-liu-lan-qi/">
        </link>
        <updated>2020-05-29T15:05:22.000Z</updated>
        <summary type="html"><![CDATA[<p>原生的Chrome浏览器下了又删，删了又下，最后还是删了。原因很简单，因为它很好用，它又不是很好用。<br>
...</p>
]]></summary>
        <content type="html"><![CDATA[<p>原生的Chrome浏览器下了又删，删了又下，最后还是删了。原因很简单，因为它很好用，它又不是很好用。<br>
...</p>
<!-- more -->
<p>好用是它打开网页的速度真的很快，但是对于我来说，它用起来又真的有点别扭。历史记录要单独开一个标签页，下载管理也要单独开一个标签页，而且下载过程中的进度指示会一直挂在浏览器的最下端，蓝瘦人。</p>
<p>后来接触了一个国内团队基于Chromium定制的浏览器——百分浏览器。它真的非常好用，而且使用Google账号进行同步。我上面对Chrome浏览器的一切“控诉”也都是用惯了它才产生的。我有在Ubuntu下使用Chrome浏览器的需求，但是因为百分浏览器自身整合了许多浏览器扩展的功能，所以如果在Ubuntu下Chrome上安装一些特殊扩展的话，在Windows平台下的百分浏览器又会同步这些重复功能的扩展，其实也没什么，但我就是感觉蓝瘦人。</p>
<p>那么干脆全部换成Chrome浏览器不就好了吗？嗯~ o(<strong>￣▽￣</strong>)o，Good idea！</p>
<p>这篇文章的目的是记录一些可以让原生的Chrome浏览器变得更符合我个人使用习惯的浏览器，嘿嘿，变成我的形状。</p>
<ol>
<li>
<p><a href="https://chrome.google.com/webstore/detail/%E4%B8%8B%E8%BD%BD%E7%AE%A1%E7%90%86/nfmgapnodlagabglffakjglkalonidld">下载管理</a><br>
<img src="https://horizain.github.io/post-images/1590848447176.png" alt="" loading="lazy"><br>
接管浏览器自带的下载页面，既方便管理下载文件，也可以随时查看下载进度，而且风格简洁，提高了使用效率。</p>
</li>
<li>
<p><a href="https://chrome.google.com/webstore/detail/undo-closed-tabs-button/ieehkmoiljghfkejgahoheemdjpdinml">Undo Closed Tabs Button</a><br>
<img src="https://horizain.github.io/post-images/1590848507074.png" alt="" loading="lazy"><br>
查看刚刚关闭的标签页，比起历史记录的页面，好用到不知道哪里去了，当然这个功能也是百分浏览器自带的一个功能。</p>
</li>
<li>
<p><a href="https://chrome.google.com/webstore/detail/reading-list/lloccabjgblebdmncjndmiibianflabo">阅读列表</a><br>
<img src="https://horizain.github.io/post-images/1590848538492.png" alt="" loading="lazy"><br>
这个扩展非常好用，真的很好用。它可以暂时保存一些标签页，相当于一个临时的收藏夹。有时候一些网页有临时使用的需求，但是又没有放入收藏夹的必要，这个扩展就非常Nice了。放入阅读列表，看完后再叉掉，整个操作体验比使用收藏夹强很多。</p>
</li>
<li>
<p><a href="https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm">uBlock Origin</a><br>
<img src="https://horizain.github.io/post-images/1590848597768.png" alt="" loading="lazy"><br>
广告拦截软件，简洁好用，内存占用也不高。</p>
</li>
<li>
<p><a href="https://chrome.google.com/webstore/detail/jlgkpaicikihijadgifklkbpdajbkhjo">crxMouse Chrome™ 手势</a><br>
<img src="https://horizain.github.io/post-images/1590848657762.png" alt="" loading="lazy"><br>
手势软件，可以使用右键画出快捷操作，还可以使用拖放功能，快速打开网页、图片等。</p>
</li>
<li>
<p><a href="https://chrome.google.com/webstore/detail/%E6%B2%99%E6%8B%89%E6%9F%A5%E8%AF%8D-%E8%81%9A%E5%90%88%E8%AF%8D%E5%85%B8%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/cdonnmffkdaoajfknoeeecmchibpmkmg">沙拉查词</a><br>
<img src="https://horizain.github.io/post-images/1590848696911.png" alt="" loading="lazy"><br>
划词翻译扩展，集成了多个翻译网站的接口，可以一次给出不同的结果，查单词、听读音、看翻译等场景使用非常方便。</p>
</li>
<li>
<p><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo">Tampermonkey</a><br>
<img src="https://horizain.github.io/post-images/1590848603207.png" alt="" loading="lazy"><br>
大名鼎鼎的油猴插件，可以安装脚本增强网页功能，实现针对性的去除广告，页面重排，功能增强等。</p>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://horizain.github.io/post/hello-gridea/</id>
        <link href="https://horizain.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>